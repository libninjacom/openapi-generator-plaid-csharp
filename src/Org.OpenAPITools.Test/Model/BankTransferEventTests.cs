/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing BankTransferEvent
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class BankTransferEventTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for BankTransferEvent
        //private BankTransferEvent instance;

        public BankTransferEventTests()
        {
            // TODO uncomment below to create an instance of BankTransferEvent
            //instance = new BankTransferEvent();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of BankTransferEvent
        /// </summary>
        [Fact]
        public void BankTransferEventInstanceTest()
        {
            // TODO uncomment below to test "IsType" BankTransferEvent
            //Assert.IsType<BankTransferEvent>(instance);
        }


        /// <summary>
        /// Test the property 'EventId'
        /// </summary>
        [Fact]
        public void EventIdTest()
        {
            // TODO unit test for the property 'EventId'
        }
        /// <summary>
        /// Test the property 'Timestamp'
        /// </summary>
        [Fact]
        public void TimestampTest()
        {
            // TODO unit test for the property 'Timestamp'
        }
        /// <summary>
        /// Test the property 'EventType'
        /// </summary>
        [Fact]
        public void EventTypeTest()
        {
            // TODO unit test for the property 'EventType'
        }
        /// <summary>
        /// Test the property 'AccountId'
        /// </summary>
        [Fact]
        public void AccountIdTest()
        {
            // TODO unit test for the property 'AccountId'
        }
        /// <summary>
        /// Test the property 'BankTransferId'
        /// </summary>
        [Fact]
        public void BankTransferIdTest()
        {
            // TODO unit test for the property 'BankTransferId'
        }
        /// <summary>
        /// Test the property 'OriginationAccountId'
        /// </summary>
        [Fact]
        public void OriginationAccountIdTest()
        {
            // TODO unit test for the property 'OriginationAccountId'
        }
        /// <summary>
        /// Test the property 'BankTransferType'
        /// </summary>
        [Fact]
        public void BankTransferTypeTest()
        {
            // TODO unit test for the property 'BankTransferType'
        }
        /// <summary>
        /// Test the property 'BankTransferAmount'
        /// </summary>
        [Fact]
        public void BankTransferAmountTest()
        {
            // TODO unit test for the property 'BankTransferAmount'
        }
        /// <summary>
        /// Test the property 'BankTransferIsoCurrencyCode'
        /// </summary>
        [Fact]
        public void BankTransferIsoCurrencyCodeTest()
        {
            // TODO unit test for the property 'BankTransferIsoCurrencyCode'
        }
        /// <summary>
        /// Test the property 'FailureReason'
        /// </summary>
        [Fact]
        public void FailureReasonTest()
        {
            // TODO unit test for the property 'FailureReason'
        }
        /// <summary>
        /// Test the property 'Direction'
        /// </summary>
        [Fact]
        public void DirectionTest()
        {
            // TODO unit test for the property 'Direction'
        }

    }

}
