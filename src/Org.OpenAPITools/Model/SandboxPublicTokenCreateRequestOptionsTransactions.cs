/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// An optional set of parameters corresponding to transactions options.
    /// </summary>
    [DataContract(Name = "SandboxPublicTokenCreateRequestOptionsTransactions")]
    public partial class SandboxPublicTokenCreateRequestOptionsTransactions : IEquatable<SandboxPublicTokenCreateRequestOptionsTransactions>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SandboxPublicTokenCreateRequestOptionsTransactions" /> class.
        /// </summary>
        /// <param name="startDate">The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD..</param>
        /// <param name="endDate">The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD..</param>
        public SandboxPublicTokenCreateRequestOptionsTransactions(DateTime startDate = default(DateTime), DateTime endDate = default(DateTime))
        {
            this.StartDate = startDate;
            this.EndDate = endDate;
        }

        /// <summary>
        /// The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
        /// </summary>
        /// <value>The earliest date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.</value>
        [DataMember(Name = "start_date", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime StartDate { get; set; }

        /// <summary>
        /// The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.
        /// </summary>
        /// <value>The most recent date for which to fetch transaction history. Dates should be formatted as YYYY-MM-DD.</value>
        [DataMember(Name = "end_date", EmitDefaultValue = false)]
        [JsonConverter(typeof(OpenAPIDateConverter))]
        public DateTime EndDate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SandboxPublicTokenCreateRequestOptionsTransactions {\n");
            sb.Append("  StartDate: ").Append(StartDate).Append("\n");
            sb.Append("  EndDate: ").Append(EndDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as SandboxPublicTokenCreateRequestOptionsTransactions);
        }

        /// <summary>
        /// Returns true if SandboxPublicTokenCreateRequestOptionsTransactions instances are equal
        /// </summary>
        /// <param name="input">Instance of SandboxPublicTokenCreateRequestOptionsTransactions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(SandboxPublicTokenCreateRequestOptionsTransactions input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.StartDate == input.StartDate ||
                    (this.StartDate != null &&
                    this.StartDate.Equals(input.StartDate))
                ) && 
                (
                    this.EndDate == input.EndDate ||
                    (this.EndDate != null &&
                    this.EndDate.Equals(input.EndDate))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.StartDate != null)
                {
                    hashCode = (hashCode * 59) + this.StartDate.GetHashCode();
                }
                if (this.EndDate != null)
                {
                    hashCode = (hashCode * 59) + this.EndDate.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
