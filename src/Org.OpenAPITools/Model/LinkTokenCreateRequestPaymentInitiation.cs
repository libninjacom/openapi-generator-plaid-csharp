/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Specifies options for initializing Link for use with the Payment Initiation (Europe) product. This field is required if &#x60;payment_initiation&#x60; is included in the &#x60;products&#x60; array.
    /// </summary>
    [DataContract(Name = "LinkTokenCreateRequestPaymentInitiation")]
    public partial class LinkTokenCreateRequestPaymentInitiation : IEquatable<LinkTokenCreateRequestPaymentInitiation>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="LinkTokenCreateRequestPaymentInitiation" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected LinkTokenCreateRequestPaymentInitiation() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="LinkTokenCreateRequestPaymentInitiation" /> class.
        /// </summary>
        /// <param name="paymentId">The &#x60;payment_id&#x60; provided by the &#x60;/payment_initiation/payment/create&#x60; endpoint. (required).</param>
        public LinkTokenCreateRequestPaymentInitiation(string paymentId = default(string))
        {
            // to ensure "paymentId" is required (not null)
            if (paymentId == null)
            {
                throw new ArgumentNullException("paymentId is a required property for LinkTokenCreateRequestPaymentInitiation and cannot be null");
            }
            this.PaymentId = paymentId;
        }

        /// <summary>
        /// The &#x60;payment_id&#x60; provided by the &#x60;/payment_initiation/payment/create&#x60; endpoint.
        /// </summary>
        /// <value>The &#x60;payment_id&#x60; provided by the &#x60;/payment_initiation/payment/create&#x60; endpoint.</value>
        [DataMember(Name = "payment_id", IsRequired = true, EmitDefaultValue = false)]
        public string PaymentId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class LinkTokenCreateRequestPaymentInitiation {\n");
            sb.Append("  PaymentId: ").Append(PaymentId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as LinkTokenCreateRequestPaymentInitiation);
        }

        /// <summary>
        /// Returns true if LinkTokenCreateRequestPaymentInitiation instances are equal
        /// </summary>
        /// <param name="input">Instance of LinkTokenCreateRequestPaymentInitiation to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(LinkTokenCreateRequestPaymentInitiation input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.PaymentId == input.PaymentId ||
                    (this.PaymentId != null &&
                    this.PaymentId.Equals(input.PaymentId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.PaymentId != null)
                {
                    hashCode = (hashCode * 59) + this.PaymentId.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            // PaymentId (string) minLength
            if (this.PaymentId != null && this.PaymentId.Length < 1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for PaymentId, length must be greater than 1.", new [] { "PaymentId" });
            }

            yield break;
        }
    }

}
