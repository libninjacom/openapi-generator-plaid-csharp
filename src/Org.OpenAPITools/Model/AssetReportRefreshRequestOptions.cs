/*
 * The Plaid API
 *
 * The Plaid REST API. Please see https://plaid.com/docs/api for more details.
 *
 * The version of the OpenAPI document: 2020-09-14_1.64.13
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// An optional object to filter &#x60;/asset_report/refresh&#x60; results. If provided, cannot be &#x60;null&#x60;. If not specified, the &#x60;options&#x60; from the original call to &#x60;/asset_report/create&#x60; will be used.
    /// </summary>
    [DataContract(Name = "AssetReportRefreshRequestOptions")]
    public partial class AssetReportRefreshRequestOptions : IEquatable<AssetReportRefreshRequestOptions>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="AssetReportRefreshRequestOptions" /> class.
        /// </summary>
        /// <param name="clientReportId">Client-generated identifier, which can be used by lenders to track loan applications..</param>
        /// <param name="webhook">URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready..</param>
        /// <param name="user">user.</param>
        public AssetReportRefreshRequestOptions(string clientReportId = default(string), string webhook = default(string), AssetReportUser user = default(AssetReportUser))
        {
            this.ClientReportId = clientReportId;
            this.Webhook = webhook;
            this.User = user;
        }

        /// <summary>
        /// Client-generated identifier, which can be used by lenders to track loan applications.
        /// </summary>
        /// <value>Client-generated identifier, which can be used by lenders to track loan applications.</value>
        [DataMember(Name = "client_report_id", EmitDefaultValue = true)]
        public string ClientReportId { get; set; }

        /// <summary>
        /// URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.
        /// </summary>
        /// <value>URL to which Plaid will send Assets webhooks, for example when the requested Asset Report is ready.</value>
        [DataMember(Name = "webhook", EmitDefaultValue = true)]
        public string Webhook { get; set; }

        /// <summary>
        /// Gets or Sets User
        /// </summary>
        [DataMember(Name = "user", EmitDefaultValue = false)]
        public AssetReportUser User { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class AssetReportRefreshRequestOptions {\n");
            sb.Append("  ClientReportId: ").Append(ClientReportId).Append("\n");
            sb.Append("  Webhook: ").Append(Webhook).Append("\n");
            sb.Append("  User: ").Append(User).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as AssetReportRefreshRequestOptions);
        }

        /// <summary>
        /// Returns true if AssetReportRefreshRequestOptions instances are equal
        /// </summary>
        /// <param name="input">Instance of AssetReportRefreshRequestOptions to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(AssetReportRefreshRequestOptions input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.ClientReportId == input.ClientReportId ||
                    (this.ClientReportId != null &&
                    this.ClientReportId.Equals(input.ClientReportId))
                ) && 
                (
                    this.Webhook == input.Webhook ||
                    (this.Webhook != null &&
                    this.Webhook.Equals(input.Webhook))
                ) && 
                (
                    this.User == input.User ||
                    (this.User != null &&
                    this.User.Equals(input.User))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ClientReportId != null)
                {
                    hashCode = (hashCode * 59) + this.ClientReportId.GetHashCode();
                }
                if (this.Webhook != null)
                {
                    hashCode = (hashCode * 59) + this.Webhook.GetHashCode();
                }
                if (this.User != null)
                {
                    hashCode = (hashCode * 59) + this.User.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
